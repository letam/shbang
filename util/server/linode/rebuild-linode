#!/usr/bin/env bash

# Rebuild Linode server with specified image

usage() {
	>&2 echo "Usage: $0 SERVER_NAME [IMAGE_NAME]"
	exit 1
}
argc=$#
(( argc < 1 || argc > 2 )) && usage

server_name=$1 ; shift
image_name=$1 ; shift


server_id=$(linode-cli --text linodes list \
	| tail -n +2 | grep -E -m1 "^[0-9]+\s+$server_name\s" | cut -f 1)
test "$server_id" = "" && >&2 echo "Server with that name not found." && exit 1


if [[ $image_name != "" ]]; then
	if [[ $image_name =~ ^private/ ]]; then
		regex="^private/$image_name\s"
	elif [[ $image_name =~ ^linode/ ]]; then
		regex="^linode/$image_name\s"
	else
		regex="^(private|linode)/$image_name\s"
	fi
	image_id=$(linode-cli --text images list \
		| tail -n +2 | tac | grep -E -m1 $regex | cut -f 1)
	test "$image_id" = "" && >&2 echo "Image not found." && exit 1
fi

if [[ $image_name != "" ]]; then
	echo -n "Confirm rebuild server ID $server_id with image ID $image_id (y/n): "
else
	echo -n "Confirm rebuild server ID $server_id (y/n): "
fi
read -r response
test ${response:-n} = y || exit


command="linode-cli --text linodes rebuild $server_id --root_pass"

if [[ -f ~/.ssh/id_rsa.pub ]]; then
	command+=" --authorized_keys '$(cat ~/.ssh/id_rsa.pub)'"
fi

if [[ $image_name != "" ]]; then
	command+=" --image $image_id"
fi

eval $command
