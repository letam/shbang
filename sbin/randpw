#!/usr/bin/env php
<?php
/**
 * Generate a random string, using a cryptographically secure
 * pseudorandom number generator (random_int)
 *
 * Source: https://stackoverflow.com/questions/4356289/php-random-string-generator/31107425#31107425
 *
 * This function uses type hints now (PHP 7+ only), but it was originally
 * written for PHP 5 as well.
 *
 * For PHP 7, random_int is a PHP core function
 * For PHP 5.x, depends on https://github.com/paragonie/random_compat
 *
 * @param int $length		How many characters do we want?
 * @param string $keyspace	A string of all possible characters to select from
 * @return string
 */

define("NUMERIC", "0123456789");
define("ALPHA", "abcdefghijklmnopqrstuvwxyz");
define("ALPHA_UPPER", strtoupper(ALPHA));
define("SPECIAL_CHARS", "!@#$%^&*()");

define("KEYSPACE", ALPHA_UPPER . ALPHA . NUMERIC . SPECIAL_CHARS);


function random_str(int $length = 64, string $keyspace = KEYSPACE): string {
	if ($length < 1) {
		throw new \RangeException("Length must be a positive integer.");
	}
	$pieces = [];
	$max = mb_strlen($keyspace, "8bit") - 1;
	// Build up random string
	for ($i = 0; $i < $length; ++$i) {
		$pieces []= $keyspace[random_int(0, $max)];
	}

	// Ensure that random string contains one of every type of character
	$pieces = contain_one_of_each($pieces, [ALPHA_UPPER, ALPHA, NUMERIC, SPECIAL_CHARS]);

	return implode("", $pieces);
}

/**
 * Return copy of array $pieces in which there are replacements such that one of
 * each character in array $groups is in copy.
 *
 */
function contain_one_of_each(array $pieces, array $groups) {
	// Insert one of each character into array (replacing at index $i)
	for ($i = 0, $len = count($groups); $i < $len; ++$i) {
		$group = $groups[$i];
		$pieces[$i]= $group[random_int(0, mb_strlen($group, "8bit") - 1)];
	}
	// Swap newly inserted character with random character in rest of string
	// to shuffle them around.
	for ($i = 0, $len = count($groups); $i < $len; ++$i) {
		$tmp = $pieces[$i];
		$rand_i = random_int($i, count($pieces) - 1);
		$pieces[$i] = $pieces[$rand_i];
		$pieces[$rand_i] = $tmp;
	}
	return $pieces;
}

if (PHP_SAPI === "cli") {
	$length = $argc > 1 ? $argv[1] : 16;
	echo random_str($length) . PHP_EOL;
}

