#!/usr/bin/env bash

# Install PHP

[[ $(id -u) != 0 ]] && echo "Error: Must be run as sudo/root." && exit 1


php_version=7.4

centos_version=8


[[ $(command -v php) != "" ]] && >&2 echo "PHP is already installed." && exit 1


if [[ $(os-name) = centos ]]; then
	# Source: https://rpms.remirepo.net/wizard/

	# Install the EPEL repository configuration package:
	dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-$centos_version.noarch.rpm

	# Install the Remi repository configuration package:
	dnf install -y https://rpms.remirepo.net/enterprise/remi-release-$centos_version.rpm

	# Install the yum-utils package (for the yum-config-manager command):
	dnf install -y yum-utils

	# Enable the module stream for $php_version:
	dnf module reset -y php
	dnf module install -y php:remi-$php_version

	# Upgrade (the repository only provides PHP):
	dnf -y update

	# Install additional packages:
	#dnf install php-xxx

	# Install PDO SQL database extension and the PDO driver for MySQL
	dnf install -y php-pdo php-pdo_mysql

	# Install testing packages:
	#dnf --enablerepo=remi-modular-test install php-xxx

	# Check the installed version and available extensions:
	php --version
	php --modules
fi


# Enable systemd service
if ! systemctl list-unit-files --state=enabled | grep -q php-fpm; then
	systemctl enable --now php-fpm
fi
systemctl status -l --no-pager php-fpm


# Ensure the log directory is part of the "adm" group for good read access
log_dir=/var/log/php-fpm
chdirgroup "$log_dir" adm
if [[ $(ls "$log_dir" | wc -l) != 0 ]]; then
	chmod -v -R g+r "$log_dir"/*
fi


# Ensure existence of PHP socket configuration for Nginx server blocks
[[ ! -d /etc/nginx/conf.d ]] && mkdir -vp /etc/nginx/conf.d
if [[ -d /etc/nginx/conf.d && ! -f /etc/nginx/conf.d/php-fpm.conf ]]; then
	echo "Creating /etc/nginx/conf.d/php-fpm.conf..."
	sudo tee /etc/nginx/conf.d/php-fpm.conf >/dev/null <<"EOF"
# PHP-FPM FastCGI server
# network or unix domain socket configuration

upstream php-fpm {
    server unix:/run/php-fpm/www.sock;
}
EOF
fi

# Ensure existence of PHP file configuration for Nginx server blocks
[[ ! -d /etc/nginx/default.d ]] && mkdir -vp /etc/nginx/default.d
if [[ -d /etc/nginx/default.d && ! -f /etc/nginx/default.d/php.conf ]]; then
	echo "Creating /etc/nginx/default.d/php.conf..."
	sudo tee /etc/nginx/default.d/php.conf >/dev/null <<"EOF"
# pass the PHP scripts to FastCGI server
#
# See conf.d/php-fpm.conf for socket configuration
#
index index.php index.html index.htm;

location ~ \.php$ {
    try_files $uri =404;
    fastcgi_intercept_errors on;
    fastcgi_index  index.php;
    include        fastcgi_params;
    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    fastcgi_pass   php-fpm;
}
EOF
fi

# Install Composer package dependency manager for PHP projects
if $(dirname $0)/composer; then
	mv -v composer.phar /usr/local/bin/composer
else
	echo "Error: Could not download composer.phar!"
fi

