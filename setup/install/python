#!/usr/bin/env bash

# Install Python code interpreter


[[ $(id -u) != 0 ]] && >&2 echo "Error: Must be run as sudo/root." && exit 1


source "$(dirname "$0")/../versions"
#echo $python_version


minor_version=$(cut -f 1,2 -d "." <<< $python_version)
major_version=$(cut -f 1 -d "." <<< $python_version)


if command -v dnf >/dev/null; then

	if ! command -v "python$minor_version" >/dev/null; then
		echo "INFO: Install Python $python_version..."

		## Download dependencies to compile Python source code
		dnf install -y gcc openssl-devel bzip2-devel libffi-devel tar make
		dnf install -y sqlite-devel.x86_64

		## Install from source code
		(
			### Download source code bundle
			cd /opt
			file=Python-$python_version
			curl -LO https://www.python.org/ftp/python/$python_version/$file.tgz
			tar -zv -xf $file.tgz

			### Compile and install
			cd $file
			./configure --enable-optimizations
			make altinstall
			cd -
			rm -v $file.tgz
		)
	else
		>&2 echo "Python $python_version is already installed."
	fi

	## Create system links to access latest versions of python and pip by plain name (if possible)

	### Get version number used in filename (Remove patch version number)
	file_version=$(cut -f 1,2 -d "." <<< $python_version)

	### Link python binary to latest version
	ln -vs /usr/local/bin/python$file_version /usr/bin/python
	ln -vs /usr/local/bin/python$file_version /usr/bin/python$major_version

	### Create shortcut to system Python venv
	if [[ ! -f /usr/bin/python-venv ]]; then
		cat > /usr/bin/python-venv <<-EOF
			#!/usr/bin/env bash

			python$major_version -m venv "\$@"
		EOF
		chmod +x /usr/bin/python-venv
	fi

	### Link pip binary to latest version
	if [[ -f /usr/local/bin/pip$file_version ]]; then
		ln -vs /usr/local/bin/pip$file_version /usr/bin/pip
		ln -vs /usr/local/bin/pip$file_version /usr/bin/pip$major_version
	fi

	## Update libraries pip and setuptools to latest versions
	echo "INFO: Update libraries pip and setuptools to latest versions..."
	pip install -U pip setuptools

elif command -v apt >/dev/null; then

	# Update packages list and install prerequisites
	apt update
	apt install -y software-properties-common

	echo "INFO: Install Python $python_version..."
	# Add deadsnakes PPa to system's sources list
	add-apt-repository -y ppa:deadsnakes/ppa
	apt install -y python$minor_version

	### Link python binary to latest version
	ln -vsf /usr/bin/python$minor_version /usr/bin/python

	## Install venv - Python virtual environment manager
	echo "INFO: Installing Python venv..."
	apt install -y python$major_version-venv

	### Create shortcut to system Python venv
	if [[ ! -f /usr/bin/python-venv ]]; then
		cat > /usr/bin/python-venv <<-EOF
			#!/usr/bin/env bash

			python$major_version -m venv "\$@"
		EOF
		chmod +x /usr/bin/python-venv
	fi

	## Install PIP Python package installer
	echo "INFO: Installing Python pip..."
	apt install -y python$major_version-pip

	### Link pip binary to latest version
	ln -vsf /usr/bin/pip$major_version /usr/bin/pip
fi

