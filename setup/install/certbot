#!/usr/bin/env bash

# Install Lets Encrypt SSL Certbot for HTTPS Certificates


[[ $(id -u) != 0 ]] && echo "Error: Must be run as sudo/root." && exit 1


is_centos() {
	[[ -f /etc/centos-release ]]
}
is_ubuntu() {
	[[ $(uname -a) =~ Ubuntu ]]
}


install_certbot() {
if ! command -v certbot >/dev/null; then
	if is_centos; then
		# Reference: https://certbot.eff.org/lets-encrypt/centosrhel8-nginx.html
		curl -LO https://dl.eff.org/certbot-auto
		sudo mv certbot-auto /usr/local/bin/certbot-auto
		sudo chown root /usr/local/bin/certbot-auto
		sudo chmod 0755 /usr/local/bin/certbot-auto
		if command -v python3 >/dev/null; then
			sudo tee /usr/bin/certbot >/dev/null <<-"EOF"
			#!/bin/sh

			/usr/local/bin/certbot-auto --no-bootstrap $@
			EOF
			sudo chmod +x /usr/bin/certbot
			certbot --install-only
		else
			sudo ln -vs /usr/local/bin/certbot-auto /usr/bin/certbot
			echo y | certbot --install-only
		fi
		echo "Installed: $(certbot --version)"
		if ! grep -q "certbot-auto renew" /etc/crontab; then
			echo "Adding semi-daily cronjob to renew SSL certificates..."
			sudo bak /etc/crontab
			echo "0 0,12 * * * root python3 -c 'import random; import time; time.sleep(random.random() * 3600)' && certbot renew -q" \
				| sudo tee -a /etc/crontab >/dev/null
		fi
	elif is_ubuntu; then
		# Reference: https://certbot.eff.org/lets-encrypt/ubuntufocal-nginx
		sudo apt-get update
		sudo apt-get install software-properties-common
		sudo add-apt-repository universe
		sudo apt-get update

		sudo apt install -y certbot
	fi
fi
}


## Add options from Let's Encrypt for SSL connections on Nginx

get_options_ssl_nginx() {
	### Attempt to get settings from GitHub before writing the file ourselves
	if [[ ! -f /etc/letsencrypt/options-ssl-nginx.conf ]]; then
		(
			cd /etc/letsencrypt
			curl -LO https://github.com/certbot/certbot/raw/master/certbot-nginx/certbot_nginx/_internal/tls_configs/options-ssl-nginx.conf
		)
	fi
	if [[ ! -f /etc/letsencrypt/options-ssl-nginx.conf ]]; then
		# Source: https://github.com/certbot/certbot/blob/896c1e0b66817eff447b41f619772a6441b416df/certbot-nginx/certbot_nginx/_internal/tls_configs/options-ssl-nginx.conf
		cat > /etc/letsencrypt/options-ssl-nginx.conf <<-"EOF"
			# This file contains important security parameters. If you modify this file
			# manually, Certbot will be unable to automatically provide future security
			# updates. Instead, Certbot will print and log an error message with a path to
			# the up-to-date file that you will need to refer to when manually updating
			# this file.

			ssl_session_cache shared:le_nginx_SSL:10m;
			ssl_session_timeout 1440m;
			ssl_session_tickets off;

			ssl_protocols TLSv1.2 TLSv1.3;
			ssl_prefer_server_ciphers off;

			ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
			EOF
	fi
}

get_ssl_dhparams() {
	if [[ ! -f /etc/letsencrypt/ssl-dhparams.pem ]]; then
		(
			cd /etc/letsencrypt
			curl -LO https://raw.githubusercontent.com/certbot/certbot/master/certbot/certbot/ssl-dhparams.pem
		)
	fi
	if [[ ! -f /etc/letsencrypt/ssl-dhparams.pem ]]; then
		# Source: https://github.com/certbot/certbot/blob/4abd81e2186eddc67551d61a8260440bd177d18d/certbot/certbot/ssl-dhparams.pem
		cat > /etc/letsencrypt/options-ssl-nginx.conf <<"EOF"
-----BEGIN DH PARAMETERS-----
MIIBCAKCAQEA//////////+t+FRYortKmq/cViAnPTzx2LnFg84tNpWp4TZBFGQz
+8yTnc4kmz75fS/jY2MMddj2gbICrsRhetPfHtXV/WVhJDP1H18GbtCFY2VVPe0a
87VXE15/V8k1mE8McODmi3fipona8+/och3xWKE2rec1MKzKT0g6eXq8CrGCsyT7
YdEIqUuyyOP7uWrat2DX9GgdT0Kj3jlN9K5W7edjcrsZCwenyO4KbXCeAvzhzffi
7MA0BM0oNC9hkXL+nOmFg/+OTxIy7vKBg8P+OxtMb61zO7X8vC7CIAXFjvGDfRaD
ssbzSibBsu/6iGtCOGEoXJf//////////wIBAg==
-----END DH PARAMETERS-----
EOF
	fi
}


main() {
	install_certbot
	get_options_ssl_nginx
	get_ssl_dhparams
}

main
