#!/usr/bin/env bash

# Install PostgreSQL database server (or just the client)
#* Reference: https://www.postgresql.org/download/linux/redhat/

[[ $(id -u) != 0 ]] && >&2 echo "Must be run as sudo/root." && exit 1

if [[ $1 = "client" ]]; then
	install_client_only=0
	echo "INFO [$(date)]: Installing PostgreSQL client..."
else
	echo "INFO [$(date)]: Installing PostgreSQL server..."
fi


pgsql_version=12
rhel_version=8


## Install the repository RPM:
install_repository_rpm() {
	dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-$rhel_version-x86_64/pgdg-redhat-repo-latest.noarch.rpm
}


## Disable the built-in PostgreSQL module
disable_builtin_postgresql_module() {
	dnf -qy module disable postgresql
}


## Install the client packages
install_client() {
	dnf install -y postgresql$pgsql_version
}


## Install the server packages, initialize the database, enable system service
install_server() {
	echo "Install PostgreSQL server (version $pgsql_version)"
	dnf install -y postgresql$pgsql_version-server

	## Initialize database
	/usr/pgsql-$pgsql_version/bin/postgresql-$pgsql_version-setup initdb

	echo "Enable system service."
	systemctl enable postgresql-$pgsql_version

	## Create symblink to access service without referring to version
	ln -s /usr/lib/systemd/system/postgresql-$pgsql_version.service /etc/systemd/system/postgresql.service
}


## Configure authentication and connection settings for server
configure_settings() {
	echo "Backup initial database server configuration file."
	server_conf=/var/lib/pgsql/$pgsql_version/data/postgresql.conf
	cp -vp $server_conf $server_conf.bak

	password_encryption="scram-sha-256"
	echo "Set password encryption scheme to '$password_encryption'"
	sed -i -E "s/(#password_encryption.*)/\1\npassword_encryption = $password_encryption/" $server_conf

	echo "Set server to listen to all addresses (shield by firewall)."
	sed -i -E "s/(#listen_addresses =.*)/\1\nlisten_addresses = '*'/" $server_conf

	#echo "Set up SSL settings for server."
	#sed -i -E "s/(#ssl =.*)/\1\nssl = on/" $server_conf
	## Handle separately

	echo "Backup initial host-based authentication configuration file"
	auth_conf=/var/lib/pgsql/$pgsql_version/data/pg_hba.conf
	cp -vp $auth_conf $auth_conf.bak
}


install_log_reader() {
	cat > /usr/local/sbin/pgsql-log <<-"EOF"
		# Display latest postgresql log contents in less, in tail mode
		if ! groups | grep -q adm; then
			>&2 echo "must be part of 'adm' group"
			exit 1
		else
			sudo -v || exit 1
		fi
		pgsql_version=$(sudo -u postgres ls /var/lib/pgsql | sort -V | tail -1)
		log_dir=/var/lib/pgsql/$pgsql_version/data/log
		latest_log_file=$(sudo -u postgres ls -t $log_dir | head -1)
		sudo -u postgres less -N+F $log_dir/$latest_log_file
		EOF
	chmod +x /usr/local/sbin/pgsql-log
}


# Main

install_repository_rpm
disable_builtin_postgresql_module

if [[ $install_client_only = 0 ]]; then
	install_client
else
	install_server
	configure_settings
	install_log_reader

	systemctl start postgresql-$pgsql_version

	## Check status of service
	systemctl status -l --no-pager postgresql-$pgsql_version
fi

echo "INFO [$(date)]: Done!"
